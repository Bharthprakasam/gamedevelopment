import pygame, random, sys
pygame.init()

W, H = 400, 500
screen = pygame.display.set_mode((W, H))
font = pygame.font.SysFont("arial", 40)
small_font = pygame.font.SysFont("arial", 24)
clock = pygame.time.Clock()

grid = [[0]*4 for _ in range(4)]
score = 0
game_state = "menu"

def add_tile():
    empty = [(r, c) for r in range(4) for c in range(4) if grid[r][c] == 0]
    if empty:
        r, c = random.choice(empty)
        grid[r][c] = 2 if random.random() < 0.9 else 4

def draw_grid():
    screen.fill((187, 173, 160))
    for r in range(4):
        for c in range(4):
            val = grid[r][c]
            color = (205, 193, 180) if val == 0 else (238, 228, 218)
            pygame.draw.rect(screen, color, (c*100+10, r*100+100, 80, 80), border_radius=8)
            if val:
                text = font.render(str(val), True, (119, 110, 101))
                rect = text.get_rect(center=(c*100+50, r*100+140))
                screen.blit(text, rect)
    # Exit button
    pygame.draw.rect(screen, (255, 80, 80), (10, 10, 40, 40), border_radius=6)
    cross = small_font.render("X", True, (255, 255, 255))
    screen.blit(cross, (22, 14))

def compress_and_merge(row):
    new_row = [i for i in row if i != 0]
    for i in range(len(new_row)-1):
        if new_row[i] == new_row[i+1]:
            new_row[i] *= 2
            new_row[i+1] = 0
    return [i for i in new_row if i != 0]

def move_left():
    global grid
    new_grid = []
    for row in grid:
        merged = compress_and_merge(row)
        merged += [0]*(4-len(merged))
        new_grid.append(merged)
    if new_grid != grid:
        grid = new_grid
        add_tile()

def move_right():
    global grid
    new_grid = []
    for row in grid:
        reversed_row = list(reversed(row))
        merged = compress_and_merge(reversed_row)
        merged += [0]*(4-len(merged))
        new_grid.append(list(reversed(merged)))
    if new_grid != grid:
        grid = new_grid
        add_tile()

def move_up():
    global grid
    grid = list(map(list, zip(*grid)))
    move_left()
    grid = list(map(list, zip(*grid)))

def move_down():
    global grid
    grid = list(map(list, zip(*grid)))
    move_right()
    grid = list(map(list, zip(*grid)))

def draw_menu():
    screen.fill((30, 30, 30))
    play_btn = pygame.Rect(100, 200, 200, 60)
    pygame.draw.rect(screen, (100, 200, 100), play_btn, border_radius=15)
    text = font.render("Play", True, (255, 255, 255))
    screen.blit(text, (160, 210))
    return play_btn

# Start with two tiles
add_tile()
add_tile()

running = True
while running:
    clock.tick(60)
    if game_state == "menu":
        play_button = draw_menu()
    elif game_state == "game":
        draw_grid()
    pygame.display.flip()

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        
        if game_state == "menu" and event.type == pygame.MOUSEBUTTONDOWN:
            if play_button.collidepoint(event.pos):
                game_state = "game"

        elif game_state == "game":
            if event.type == pygame.MOUSEBUTTONDOWN:
                if pygame.Rect(10, 10, 40, 40).collidepoint(event.pos):
                    running = False

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    move_left()
                elif event.key == pygame.K_RIGHT:
                    move_right()
                elif event.key == pygame.K_UP:
                    move_up()
                elif event.key == pygame.K_DOWN:
                    move_down()

pygame.quit()
sys.exit()
